
server {
% for addr in listen_addr:
    % if '.' in addr:
    listen ${addr}${':'+ssl_port if ssl_enable else ''};
    % else:
    listen [${addr}]${':'+ssl_port if ssl_enable else ''};
    % endif
% endfor
\
    error_log   '/home/${user}/logs/${name}_error.log';
    access_log  '/home/${user}/logs/${name}_access.log';
    root        '${pubdir}';
    server_name ${hostnames};
\
% if ssl_enable:
    ssl on;
    ssl_certificate ${ssl_cert};
    ssl_certificate_key ${ssl_key};
% endif
\
% if autoindex:
    autoindex   on;
% endif
\
% if apptype == 0x10:
    try_files $uri $uri/ \
    % if catchall != None:
        ${catchall} \
    % else:
        =404 \
    % endif
    ;
% elif apptype == 0x20:
    try_files $uri $uri/index.html $uri/index.htm \
    % if catchall != None:
        ${catchall} \
    % endif
    @uwsgiapp;
% endif
\
% for rule in rewrites:
    ## nginx redirects absolute URL even with a relative one.
    ## this behaviour cause nginx to use its own listen port instead of
    ## the one used to make the request, with OpenVPN's --port-share.
    
    rewrite ${rule.regexp} \
    % if rule.dest.startswith('/'):
        ## relative path, we prepend the right URL
        'http${'s' if ssl_enable else ''}://$server_name${rule.dest}' \
    % else:
        '${rule.dest}' \
    %endif
    % if rule.redirect_temp:
        redirect;
    % elif rule.redirect_perm:
        permanent;
    % elif rule.last:
        last;
    % endif
% endfor
\
% for ep in error_pages:
    error_page ${ep.code} '${ep.path}';
% endfor
\
% for e in acl:
    location %{e.path} {
        auth_basic '${e.title}';
        auth_basic_user_file '/home/${user}/${e.passwd}';
    }
% endfor
% if apptype == 0x10:
    location ~ \.php$ {
        include       fastcgi_params;
        % if ssl_enable:
            # Lie on port, because of OpenVPN's --port-share.
            fastcgi_param SERVER_PORT 443;
        % endif
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass  unix:///var/run/php5-fpm/tfh/${user}.sock;
    }
% elif apptype == 0x20:
    location @uwsgiapp {
        include       uwsgi_params;
        uwsgi_pass    unix://${appsocket};
    }
% endif
}

